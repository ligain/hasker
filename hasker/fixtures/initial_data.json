[
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "admin",
        "model": "logentry"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "auth",
        "model": "permission"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "auth",
        "model": "group"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "contenttypes",
        "model": "contenttype"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "sessions",
        "model": "session"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "core",
        "model": "vote"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "core",
        "model": "tag"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "core",
        "model": "votereceiver"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "core",
        "model": "answer"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "core",
        "model": "question"
    }
},
{
    "model": "contenttypes.contenttype",
    "fields": {
        "app_label": "profiles",
        "model": "user"
    }
},
{
    "model": "sessions.session",
    "pk": "whki9ix9uuvige3uatd1l3sy76qs2lc2",
    "fields": {
        "session_data": "NjkwMjM3MTZmMzcwM2NjYTY3YTFkNDQ5NTNlZGY0ZTI5M2U2N2UwMDp7Il9hdXRoX3VzZXJfaGFzaCI6IjI4MWU5NzBkNjdmZWFiODc1Mjk3NGNkZDQxN2MzOTI3NzY4ZTQ1ODciLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=",
        "expire_date": "2018-08-31T17:41:34.353Z"
    }
},
{
    "model": "core.votereceiver",
    "pk": 1,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 2,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 3,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 4,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 5,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 6,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 7,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 8,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 9,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 10,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 11,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 12,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 13,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 14,
    "fields": {}
},
{
    "model": "core.votereceiver",
    "pk": 15,
    "fields": {}
},
{
    "model": "core.tag",
    "pk": 1,
    "fields": {
        "name": "python"
    }
},
{
    "model": "core.tag",
    "pk": 2,
    "fields": {
        "name": "python-2"
    }
},
{
    "model": "core.tag",
    "pk": 3,
    "fields": {
        "name": "javascript"
    }
},
{
    "model": "core.tag",
    "pk": 4,
    "fields": {
        "name": "html"
    }
},
{
    "model": "core.tag",
    "pk": 5,
    "fields": {
        "name": "css"
    }
},
{
    "model": "core.tag",
    "pk": 6,
    "fields": {
        "name": "cs-cart"
    }
},
{
    "model": "core.tag",
    "pk": 7,
    "fields": {
        "name": "ffmpeg"
    }
},
{
    "model": "core.tag",
    "pk": 8,
    "fields": {
        "name": "stream"
    }
},
{
    "model": "core.tag",
    "pk": 9,
    "fields": {
        "name": "live"
    }
},
{
    "model": "core.tag",
    "pk": 10,
    "fields": {
        "name": "rtmp"
    }
},
{
    "model": "core.tag",
    "pk": 11,
    "fields": {
        "name": "php"
    }
},
{
    "model": "core.tag",
    "pk": 12,
    "fields": {
        "name": "mysql"
    }
},
{
    "model": "core.tag",
    "pk": 13,
    "fields": {
        "name": "json"
    }
},
{
    "model": "core.tag",
    "pk": 14,
    "fields": {
        "name": "mysqli"
    }
},
{
    "model": "core.tag",
    "pk": 15,
    "fields": {
        "name": "laravel"
    }
},
{
    "model": "core.tag",
    "pk": 16,
    "fields": {
        "name": "href"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add log entry",
        "content_type": 1,
        "codename": "add_logentry"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change log entry",
        "content_type": 1,
        "codename": "change_logentry"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete log entry",
        "content_type": 1,
        "codename": "delete_logentry"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add permission",
        "content_type": 2,
        "codename": "add_permission"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change permission",
        "content_type": 2,
        "codename": "change_permission"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete permission",
        "content_type": 2,
        "codename": "delete_permission"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add group",
        "content_type": 3,
        "codename": "add_group"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change group",
        "content_type": 3,
        "codename": "change_group"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete group",
        "content_type": 3,
        "codename": "delete_group"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add content type",
        "content_type": 4,
        "codename": "add_contenttype"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change content type",
        "content_type": 4,
        "codename": "change_contenttype"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete content type",
        "content_type": 4,
        "codename": "delete_contenttype"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add session",
        "content_type": 5,
        "codename": "add_session"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change session",
        "content_type": 5,
        "codename": "change_session"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete session",
        "content_type": 5,
        "codename": "delete_session"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add vote",
        "content_type": 6,
        "codename": "add_vote"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change vote",
        "content_type": 6,
        "codename": "change_vote"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete vote",
        "content_type": 6,
        "codename": "delete_vote"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add tag",
        "content_type": 7,
        "codename": "add_tag"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change tag",
        "content_type": 7,
        "codename": "change_tag"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete tag",
        "content_type": 7,
        "codename": "delete_tag"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add vote receiver",
        "content_type": 8,
        "codename": "add_votereceiver"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change vote receiver",
        "content_type": 8,
        "codename": "change_votereceiver"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete vote receiver",
        "content_type": 8,
        "codename": "delete_votereceiver"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add answer",
        "content_type": 9,
        "codename": "add_answer"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change answer",
        "content_type": 9,
        "codename": "change_answer"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete answer",
        "content_type": 9,
        "codename": "delete_answer"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add question",
        "content_type": 10,
        "codename": "add_question"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change question",
        "content_type": 10,
        "codename": "change_question"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete question",
        "content_type": 10,
        "codename": "delete_question"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can add user",
        "content_type": 11,
        "codename": "add_user"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can change user",
        "content_type": 11,
        "codename": "change_user"
    }
},
{
    "model": "auth.permission",
    "fields": {
        "name": "Can delete user",
        "content_type": 11,
        "codename": "delete_user"
    }
},
{
    "model": "profiles.user",
    "fields": {
        "password": "pbkdf2_sha256$100000$wC3f5JWnNrtj$VmST5AbGorDtdPKaMR4d1wKho3OWoiXSj+kD4xJ25a0=",
        "last_login": "2018-08-17T17:41:34.345Z",
        "is_superuser": false,
        "username": "AqibBangash",
        "first_name": "",
        "last_name": "",
        "email": "AqibBangash@example.com",
        "is_staff": false,
        "is_active": true,
        "date_joined": "2018-08-15T19:56:08.231Z",
        "avatar": "",
        "created_at": "2018-08-15T19:56:08.231Z",
        "groups": [],
        "user_permissions": []
    }
},
{
    "model": "profiles.user",
    "fields": {
        "password": "pbkdf2_sha256$100000$r2LzIS8wAM5q$5eLu5uKgNTbq0PlYc73+50EbAmDiPHMVzhB6s6nt6j0=",
        "last_login": "2018-08-17T17:35:55.334Z",
        "is_superuser": true,
        "username": "superadmin",
        "first_name": "",
        "last_name": "",
        "email": "super@example.com",
        "is_staff": true,
        "is_active": true,
        "date_joined": "2018-08-15T20:13:24.682Z",
        "avatar": "",
        "created_at": "2018-08-15T20:13:24.682Z",
        "groups": [],
        "user_permissions": []
    }
},
{
    "model": "profiles.user",
    "fields": {
        "password": "pbkdf2_sha256$100000$2czhT8OqJfdw$7dqTBJD1mAsWxvgpy/3GKBlNftUan3aWNfu+8uIz6bI=",
        "last_login": "2018-08-17T17:30:38.432Z",
        "is_superuser": false,
        "username": "dzervas",
        "first_name": "",
        "last_name": "",
        "email": "dzervas@example.com",
        "is_staff": false,
        "is_active": true,
        "date_joined": "2018-08-17T17:30:38.251Z",
        "avatar": "",
        "created_at": "2018-08-17T17:30:38.251Z",
        "groups": [],
        "user_permissions": []
    }
},
{
    "model": "profiles.user",
    "fields": {
        "password": "pbkdf2_sha256$100000$sifIITiPMbRL$a1Ed9VWdzHTqxatpDpqyX57jBojw10mlNrFOKvemSNw=",
        "last_login": "2018-08-17T17:39:18.486Z",
        "is_superuser": false,
        "username": "Flamms",
        "first_name": "",
        "last_name": "",
        "email": "Flamms@example.com",
        "is_staff": false,
        "is_active": true,
        "date_joined": "2018-08-17T17:39:18.310Z",
        "avatar": "",
        "created_at": "2018-08-17T17:39:18.310Z",
        "groups": [],
        "user_permissions": []
    }
},
{
    "model": "core.vote",
    "pk": 2,
    "fields": {
        "author": 1,
        "receiver": 1,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 3,
    "fields": {
        "author": 1,
        "receiver": 4,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 4,
    "fields": {
        "author": 2,
        "receiver": 4,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 5,
    "fields": {
        "author": 2,
        "receiver": 1,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 6,
    "fields": {
        "author": 2,
        "receiver": 5,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 7,
    "fields": {
        "author": 1,
        "receiver": 5,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 8,
    "fields": {
        "author": 3,
        "receiver": 5,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 9,
    "fields": {
        "author": 3,
        "receiver": 1,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 10,
    "fields": {
        "author": 3,
        "receiver": 4,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 11,
    "fields": {
        "author": 3,
        "receiver": 7,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 12,
    "fields": {
        "author": 3,
        "receiver": 8,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 13,
    "fields": {
        "author": 1,
        "receiver": 8,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 14,
    "fields": {
        "author": 1,
        "receiver": 7,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 15,
    "fields": {
        "author": 1,
        "receiver": 10,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 16,
    "fields": {
        "author": 2,
        "receiver": 6,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 17,
    "fields": {
        "author": 2,
        "receiver": 10,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 18,
    "fields": {
        "author": 2,
        "receiver": 13,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 19,
    "fields": {
        "author": 4,
        "receiver": 5,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 20,
    "fields": {
        "author": 4,
        "receiver": 6,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 21,
    "fields": {
        "author": 4,
        "receiver": 10,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 22,
    "fields": {
        "author": 4,
        "receiver": 13,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 23,
    "fields": {
        "author": 4,
        "receiver": 7,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 24,
    "fields": {
        "author": 4,
        "receiver": 1,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 25,
    "fields": {
        "author": 4,
        "receiver": 14,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 26,
    "fields": {
        "author": 4,
        "receiver": 12,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 27,
    "fields": {
        "author": 1,
        "receiver": 12,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 28,
    "fields": {
        "author": 1,
        "receiver": 6,
        "value": 1
    }
},
{
    "model": "core.vote",
    "pk": 29,
    "fields": {
        "author": 1,
        "receiver": 13,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 30,
    "fields": {
        "author": 1,
        "receiver": 9,
        "value": -1
    }
},
{
    "model": "core.vote",
    "pk": 31,
    "fields": {
        "author": 1,
        "receiver": 15,
        "value": 1
    }
},
{
    "model": "core.answer",
    "pk": 4,
    "fields": {
        "parent_question": 1,
        "text": "Anything you want to happen in a program has to be explicitly stated - this is the nature of programming. This is like asking if you can print \"hello world\" without calling print(\"hello world\").",
        "author": 1,
        "created_at": "2018-08-15T21:12:24.498Z"
    }
},
{
    "model": "core.answer",
    "pk": 6,
    "fields": {
        "parent_question": 5,
        "text": "The * operator, unpacks the elements from a sequence/iterable (for example, list or tuple) as positional arguments to a function\r\n\r\nOn python2, print is a statement and not a function. So import print function from future, so that you use * operator for unpacking a list elements as arguments",
        "author": 1,
        "created_at": "2018-08-17T17:29:56.877Z"
    }
},
{
    "model": "core.answer",
    "pk": 9,
    "fields": {
        "parent_question": 8,
        "text": "The timeout option seems to be for listen mode. I would try to run ffmpeg using the timeout command or use something similar for the framework/language your using.",
        "author": 1,
        "created_at": "2018-08-17T17:33:45.565Z"
    }
},
{
    "model": "core.answer",
    "pk": 12,
    "fields": {
        "parent_question": 11,
        "text": "The Solution\r\n\r\nTo Fix this simply place that first closing parenthesis at the end of the line so that all string concatenation is done within the parentheses and the whole result is printed.",
        "author": 2,
        "created_at": "2018-08-17T17:36:10.601Z"
    }
},
{
    "model": "core.answer",
    "pk": 13,
    "fields": {
        "parent_question": 10,
        "text": "I don't see that you are adding anything to your $data array.",
        "author": 2,
        "created_at": "2018-08-17T17:38:15.842Z"
    }
},
{
    "model": "core.answer",
    "pk": 15,
    "fields": {
        "parent_question": 14,
        "text": "You can use request() method to fetch form data without any class dependencies.\r\n\r\nFor example: request()->id;",
        "author": 1,
        "created_at": "2018-08-17T17:41:44.223Z"
    }
},
{
    "model": "core.question",
    "pk": 1,
    "fields": {
        "title": "Add time delay in every step of python code",
        "text": "Is there an easy way to execute time delay (like time.sleep(2)) between every line of Python code without having to explicitly write it in every line of code?",
        "author": 2,
        "created_at": "2018-08-15T20:16:33.493Z",
        "slug": "add-time-delay-in-every-step-of-python-code",
        "right_answer": 4,
        "tags": [
            1
        ]
    }
},
{
    "model": "core.question",
    "pk": 5,
    "fields": {
        "title": "How does * operator work in python",
        "text": "I know that it expands function arguments, but if I try something like this in Python 2.\r\nSo it appears that I am missing something about what * exactly does?",
        "author": 2,
        "created_at": "2018-08-17T17:29:10.546Z",
        "slug": "how-does-operator-work-in-python",
        "right_answer": 6,
        "tags": [
            1,
            2
        ]
    }
},
{
    "model": "core.question",
    "pk": 7,
    "fields": {
        "title": "\u201cScript error.\u201d in CS-Cart",
        "text": "CS-Cart seems to break with a \"Script error.\" HTML with a red box around. It's like I'm getting redirected, but I can't see it anywhere. I have no idea how to debug it and what data would be useful for this issue",
        "author": 3,
        "created_at": "2018-08-17T17:31:35.876Z",
        "slug": "script-error-in-cs-cart",
        "right_answer": null,
        "tags": [
            3,
            4,
            5,
            6
        ]
    }
},
{
    "model": "core.question",
    "pk": 8,
    "fields": {
        "title": "How to check live stream is still alive use \u201cffprobe\u201d command?",
        "text": "I want to schedule a job script to check a live stream is still alive use \"ffprobe\" command. So that I can change database state for those steam already dead.",
        "author": 3,
        "created_at": "2018-08-17T17:33:01.197Z",
        "slug": "how-to-check-live-stream-is-still-alive-use-ffpro",
        "right_answer": null,
        "tags": [
            7,
            8,
            9,
            10
        ]
    }
},
{
    "model": "core.question",
    "pk": 10,
    "fields": {
        "title": "Create JSON file and display",
        "text": "I want to create a JSON file based in MySQL data but for some reasons my code is not working at all(I dont have any errors)",
        "author": 1,
        "created_at": "2018-08-17T17:35:07.554Z",
        "slug": "create-json-file-and-display",
        "right_answer": 13,
        "tags": [
            11,
            12,
            13,
            14
        ]
    }
},
{
    "model": "core.question",
    "pk": 11,
    "fields": {
        "title": "Making a Python Quiz",
        "text": "I'm doing a project that is a quiz filling the gaps and I'm having an error and I can not identify. After I fail to respond to a gap, the quiz does not show the phrase that should appear and an error appears. Can someone help me? I have tried some things and nothing happens, always when an attempt to hit is wrong it shows the error instead of showing the amount of attempts that the player still has or that he has lost. Follow the code: PS: The code is in PT_BR",
        "author": 1,
        "created_at": "2018-08-17T17:35:45.115Z",
        "slug": "making-a-python-quiz",
        "right_answer": null,
        "tags": [
            1
        ]
    }
},
{
    "model": "core.question",
    "pk": 14,
    "fields": {
        "title": "Pass data from class select to get route",
        "text": "how can I pass data from this form to my route?",
        "author": 4,
        "created_at": "2018-08-17T17:40:32.942Z",
        "slug": "pass-data-from-class-select-to-get-route",
        "right_answer": null,
        "tags": [
            4,
            15,
            16
        ]
    }
}
]
